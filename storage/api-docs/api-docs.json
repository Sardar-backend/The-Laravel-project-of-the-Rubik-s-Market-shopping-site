{
    "openapi": "3.0.0",
    "info": {
        "title": "Documentary of the Rubik's Market Laravel project",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "/api"
        }
    ],
    "paths": {
        "/admin/BlogCategory": {
            "get": {
                "tags": [
                    "Admin BlogCategory"
                ],
                "summary": "Get BlogCategory List",
                "operationId": "0bb6685fc2363563efceac036a554419",
                "responses": {
                    "200": {
                        "description": "List of BlogCategory resources",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/BlogCategoryListResource"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Admin BlogCategory"
                ],
                "summary": "Create BlogCategory",
                "operationId": "fe69965320da38333ab391d15f175766",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Name of the BlogCategory",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "parent",
                        "in": "query",
                        "description": "Parent of the BlogCategory",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create BlogCategory",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Blogcategory create successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/BlogCategoryListResource"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/BlogCategory/{id}": {
            "get": {
                "tags": [
                    "Admin BlogCategory"
                ],
                "summary": "Retrieve a specific BlogCategory by ID",
                "operationId": "f612d399b879fffc4a9a17f3d9fa0f72",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The unique ID of the blog category",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the specified BlogCategory",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/BlogCategoryListResource"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Authentication required. Please log in."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden: Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "You do not have permission to access this resource."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Admin BlogCategory"
                ],
                "summary": "Update BlogCategory",
                "operationId": "c98518d7c583628fbffc3ba774736f1c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the blog category",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Name of the blog category",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "parent",
                        "in": "query",
                        "description": "ID of the parent category (if applicable)",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "BlogCategory updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Blogcategory updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/BlogCategoryListResource"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Authentication required. Please log in."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden: Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "You do not have permission to access this resource."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found: BlogCategory not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "BlogCategory with the given ID does not exist."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Admin BlogCategory"
                ],
                "summary": "Delete BlogCategory",
                "operationId": "c64665b0e0fe3a124c7e7b5342cef82d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the blog category to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "BlogCategory deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "BlogCategory deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Authentication required. Please log in."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden: Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "You do not have permission to access this resource."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found: BlogCategory not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "BlogCategory with the given ID does not exist."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Admin BlogCategory"
                ],
                "summary": "Partial update of BlogCategory",
                "operationId": "29b5d9fd072b7411f19f7e21f8263ca7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the blog category",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "New name of the blog category",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "parent",
                        "in": "query",
                        "description": "New parent ID for the blog category",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "BlogCategory partially updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Blogcategory updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/BlogCategoryListResource"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Authentication required. Please log in."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden: Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "You do not have permission to access this resource."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found: BlogCategory not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "BlogCategory with the given ID does not exist."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/blog": {
            "get": {
                "tags": [
                    "Admin Blog"
                ],
                "summary": "List of articles",
                "operationId": "7cc17c3351f422a5085af7455e766de5",
                "responses": {
                    "200": {
                        "description": "Show blog ",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/BlogListResource"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Admin Blog"
                ],
                "summary": "Create article",
                "operationId": "cad647743d9eaa0ebeedc4fefbcedec2",
                "parameters": [
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Title of the article",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "content",
                        "in": "query",
                        "description": "The text of the article",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Photo of the article and categories",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "image",
                                    "categories"
                                ],
                                "properties": {
                                    "image": {
                                        "description": "Photo of the article",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "categories": {
                                        "description": "Category related to the article",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Create blog"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/blog/{id}": {
            "get": {
                "tags": [
                    "Admin Blog"
                ],
                "summary": "Get article",
                "operationId": "c59b00450b654281a675cb20cdf78b70",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the blog ",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show blog ",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/BlogDetailResource"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Admin Blog"
                ],
                "summary": "Update article",
                "operationId": "ee31d1e9384e66697a1d2fb2e2c9315b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the article",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Title of the article",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "content",
                        "in": "query",
                        "description": "The text of the article",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Photo of the article and categories",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "image",
                                    "categories"
                                ],
                                "properties": {
                                    "image": {
                                        "description": "Photo of the article",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "categories": {
                                        "description": "Category related to the article",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Update  article "
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Admin Blog"
                ],
                "summary": "Delete blog",
                "operationId": "931f973c7e99b489c9d5ecdcfd654cd0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the article",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete  blog "
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Admin Blog"
                ],
                "summary": "Update blog",
                "operationId": "238f28fb789213a039fefb3c29fad0b6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the article",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "ID of the blog ",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "discription",
                        "in": "query",
                        "description": "ID of the blog ",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "image",
                        "in": "query",
                        "description": "ID of the blog ",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "binary"
                        }
                    },
                    {
                        "name": "categories",
                        "in": "query",
                        "description": "ID of the blog ",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Craete  blog "
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/Cart": {
            "get": {
                "tags": [
                    "Cart"
                ],
                "summary": "Retrieve cart items",
                "operationId": "fcd87294f4769ac7419c870acdbc7d8e",
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "404": {
                        "description": "Cart not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Cart"
                ],
                "summary": "Create Cart",
                "operationId": "839a18eec7e23b93f80bf86f34f2142b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "ID of the product to add to the cart",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "quantity",
                        "in": "query",
                        "description": "Quantity of the product",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The item has been successfully added to the cart",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The item has been added to the shopping cart"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request or validation error"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Cart"
                ],
                "summary": "Delete All Items from Cart",
                "operationId": "ae2ff5b5a0e77c416a2b2381a1e1306e",
                "responses": {
                    "200": {
                        "description": "All products in your cart have been removed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "All products in your cart have been removed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No items found in the cart"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/Cart/{id}": {
            "delete": {
                "tags": [
                    "Cart"
                ],
                "summary": "Delete Single Item from Cart",
                "operationId": "9396f94446f903194fe32acfdc7f6083",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the product to delete from the cart",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Item successfully deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Item deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Item not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/admin/Comment": {
            "get": {
                "tags": [
                    "Admin Comment"
                ],
                "summary": "Retrieve the list of comments",
                "operationId": "4b2691e67456855fba6b831e794b9d04",
                "responses": {
                    "200": {
                        "description": "List of comments retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "comments": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/commentListResource"
                                                    }
                                                },
                                                "meta": {
                                                    "description": "Pagination information",
                                                    "properties": {
                                                        "current_page": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "last_page": {
                                                            "type": "integer",
                                                            "example": 5
                                                        },
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 50
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Authentication required"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Admin Comment"
                ],
                "summary": "Create a new comment",
                "operationId": "ba38eead1cb78b9b5b44f67803d344f5",
                "parameters": [
                    {
                        "name": "parent_id",
                        "in": "query",
                        "description": "Parent comment ID (if this is a reply)",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "ID of the user who is creating the comment",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "commenttable_id",
                        "in": "query",
                        "description": "ID of the resource being commented on",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "commenttable_type",
                        "in": "query",
                        "description": "Type of the resource being commented on (e.g., Post, Product)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "content",
                        "in": "query",
                        "description": "The content of the comment",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comment created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Comment created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "parent_id": {
                                                    "type": "integer",
                                                    "example": null
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 12
                                                },
                                                "commenttable_id": {
                                                    "type": "integer",
                                                    "example": 45
                                                },
                                                "commenttable_type": {
                                                    "type": "string",
                                                    "example": "Post"
                                                },
                                                "content": {
                                                    "type": "string",
                                                    "example": "This is a sample comment."
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-11-25T12:34:56Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid data provided"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Authentication required"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/Comment/{id}": {
            "delete": {
                "tags": [
                    "Admin Comment"
                ],
                "summary": "Delete Comment",
                "operationId": "2e73d8c37b516886e7594d541e207601",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the comment to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comment deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Comment deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Comment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Comment not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Authentication required"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid data provided"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Admin Comment"
                ],
                "summary": "Confirm Comment",
                "operationId": "233842bf426c6fd88b97ac09ee3fe2b2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the comment to be confirmed",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comment confirmed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Comment approved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "approved"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-11-25T14:32:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Comment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Comment not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Authentication required"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid data provided"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/contact": {
            "get": {
                "tags": [
                    "Contact"
                ],
                "summary": "Get blogs List",
                "operationId": "10c8fa0d434ec2f7f458f0eb2361df69",
                "responses": {
                    "200": {
                        "description": "List of Role resources",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContactPagination"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Contact"
                ],
                "summary": "Create Contact",
                "operationId": "e17418f32717756b4a22ffaff036b8fc",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "ID of the Contact ",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "number_phone",
                        "in": "query",
                        "description": "ID of the Contact ",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "ID of the Contact ",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "email"
                        }
                    },
                    {
                        "name": "subject",
                        "in": "query",
                        "description": "ID of the Contact ",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "content",
                        "in": "query",
                        "description": "ID of the Contact ",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "textarea"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show blog ",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Your message has been sent successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/contact/{id}": {
            "get": {
                "tags": [
                    "Contact"
                ],
                "summary": "Get Contact",
                "operationId": "ea7ade8ef2a2832d9daf248ff36383ec",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Contact ",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "200": {
                        "description": "Craete  productcategory ",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Contact"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/permission": {
            "get": {
                "tags": [
                    "Admin Permission"
                ],
                "summary": "Get Permission List",
                "operationId": "f5616b47a4d45d1c520624dc204f9e7a",
                "responses": {
                    "200": {
                        "description": "List of permissions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PermissionList"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized access"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Something went wrong on the server"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Admin Permission"
                ],
                "summary": "Create a new permission",
                "operationId": "487cad4e8ba116ebb8ccb8f7bfa52b9e",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "The unique identifier for the permission (e.g., 'edit_posts')",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "display_name",
                        "in": "query",
                        "description": "A user-friendly name for the permission (e.g., 'Edit Posts')",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Permission created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Permission created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request, invalid input data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid input data"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized access"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred while creating the permission"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/permission/{id}": {
            "get": {
                "tags": [
                    "Admin Permission"
                ],
                "summary": "Get permission",
                "operationId": "55289df50c6a194ff8a99b3b6f90c5ad",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the permission ",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show blog category",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/PermissionItem"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Admin Permission"
                ],
                "summary": "Update a permission (partial)",
                "operationId": "652d63d1fd3636c633222c45091b7b35",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the permission to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "The unique identifier for the permission (e.g., 'edit_posts')",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "display_name",
                        "in": "query",
                        "description": "A user-friendly name for the permission (e.g., 'Edit Posts')",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Permission updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Permission updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request, invalid input data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid input data"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized access"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred while updating the permission"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/admin/permission/{id}": {
            "delete": {
                "tags": [
                    "Admin Permission"
                ],
                "summary": "Delete a permission",
                "operationId": "ffa8ceac5667fd5665b671094b258725",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the permission to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Permission deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Permission deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Permission not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Permission not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized access"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred while deleting the permission"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/ProductCategory": {
            "get": {
                "tags": [
                    "Admin ProductCategory"
                ],
                "summary": "Get ProductCategory List",
                "operationId": "668a5f767cd40a7074bd85b085fbe3cd",
                "responses": {
                    "200": {
                        "description": "List of ProductCategory resources",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/BlogCategoryListResource"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Authentication required. Please log in."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden: Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "You do not have permission to access this resource."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Admin ProductCategory"
                ],
                "summary": "Create ProductCategory",
                "operationId": "2e5eb4dd6921e1aff009ad9a61b915e8",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Name of the ProductCategory",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Electronics"
                        }
                    },
                    {
                        "name": "parent",
                        "in": "query",
                        "description": "Parent ID of the ProductCategory (nullable)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 5,
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ProductCategory created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "ProductCategory created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 123
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Electronics"
                                                },
                                                "parent_id": {
                                                    "type": "integer",
                                                    "example": 5,
                                                    "nullable": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-11-01T10:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-11-01T10:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Validation failed for the request data."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Authentication required. Please log in."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/ProductCategory/{id}": {
            "get": {
                "tags": [
                    "Admin ProductCategory"
                ],
                "summary": "Get ProductCategory",
                "operationId": "f8a4dfaff3027c3a228eaac82a298ec6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the ProductCategory",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the specified ProductCategory",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 123
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Electronics"
                                                },
                                                "parent_id": {
                                                    "type": "integer",
                                                    "example": 5,
                                                    "nullable": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-11-01T10:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-11-05T15:30:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Authentication required. Please log in."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden: Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "You do not have permission to access this resource."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found: ProductCategory does not exist",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The specified ProductCategory does not exist."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Admin ProductCategory"
                ],
                "summary": "Delete ProductCategory",
                "operationId": "8341cac076a32a4f9098839bec99aa75",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete  productcategory ",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Blogcategory Deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Admin ProductCategory"
                ],
                "summary": "Partial Update ProductCategory",
                "operationId": "56578d79999e3915517468d8e3117ff9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the ProductCategory to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "New name of the ProductCategory",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Partially Updated Name"
                        }
                    },
                    {
                        "name": "parent",
                        "in": "query",
                        "description": "Parent ID of the ProductCategory (nullable)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 5,
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ProductCategory updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "ProductCategory partially updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Partially Updated Name"
                                                },
                                                "parent_id": {
                                                    "type": "integer",
                                                    "example": 5,
                                                    "nullable": true
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-11-25T10:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Validation failed for the request data."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "ProductCategory not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "ProductCategory not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/product": {
            "get": {
                "tags": [
                    "Admin Product"
                ],
                "summary": "Get a list of products",
                "operationId": "35eafc14e2225d8cef9d667d877fd121",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Keyword to search for products by name or category",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "شیائومی"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of products retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ProductDetailResource"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An internal server error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Admin Product"
                ],
                "summary": "Create Product",
                "operationId": "d10774f56144592ad91c3af8c1dc7ce5",
                "parameters": [
                    {
                        "name": "image",
                        "in": "query",
                        "description": "Product image",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "binary"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Product name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "price",
                        "in": "query",
                        "description": "Product price",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "Product description",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "stars",
                        "in": "query",
                        "description": "Number of stars",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "width",
                        "in": "query",
                        "description": "Product width",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "description": "Product length",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "name": "discount",
                        "in": "query",
                        "description": "Product discount",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "chosen",
                        "in": "query",
                        "description": "Whether the product is chosen",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "warranty",
                        "in": "query",
                        "description": "Warranty period",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Product stock",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "count_view",
                        "in": "query",
                        "description": "Number of views",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "criticism",
                        "in": "query",
                        "description": "Product criticism",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "special_sale",
                        "in": "query",
                        "description": "Special sale status",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "brand",
                        "in": "query",
                        "description": "Product brand",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized access"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/product/{id}": {
            "get": {
                "tags": [
                    "Admin Product"
                ],
                "summary": "Get a specific product by ID",
                "operationId": "1072e8079ca663fd8f7b2ee10ef7c328",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the product",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden: You are not authorized to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/403ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/admin/Product/{id}": {
            "patch": {
                "tags": [
                    "Admin Product"
                ],
                "summary": "Partially update Product",
                "operationId": "534e9e154b518f010600dfbc0145bdde",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the product",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product partially updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product partially updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/Product/{id}": {
            "delete": {
                "tags": [
                    "Admin Product"
                ],
                "summary": "Delete Product",
                "operationId": "220bae12a9112bbd76a43a84b2a269db",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the product",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/last_blogproduct": {
            "get": {
                "tags": [
                    "Other"
                ],
                "summary": "Retrieve the latest blog products",
                "operationId": "1a879f18a46b97837cef5626d7ba93e0",
                "responses": {
                    "200": {
                        "description": "A list of product resources",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProductDetailResourcee"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Products not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No products found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/indexview": {
            "get": {
                "tags": [
                    "Other"
                ],
                "summary": "Retrieve the list of products",
                "operationId": "ea11364f50aa71e5d30ea2f50d8cd749",
                "responses": {
                    "200": {
                        "description": "A list of product resources",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProductDetailResourcee"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No products found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No products found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ProductList": {
            "get": {
                "tags": [
                    "Other"
                ],
                "summary": "Retrieve the list of products with optional search functionality",
                "operationId": "dd36642f45a8c5935f864a8242e2c517",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Keyword to search for products by name or category",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "شیائومی"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Product resources",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProductDetailResourcee"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid search query"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No products found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No products found for the given search"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Like": {
            "post": {
                "tags": [
                    "Other"
                ],
                "summary": "Like a Product",
                "operationId": "a0509814f0e3a0b17a3a6baf23e000fd",
                "parameters": [
                    {
                        "name": "product_id",
                        "in": "query",
                        "description": "ID of the product to be liked",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully liked the product",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product liked successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid product ID"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized access"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/disLike": {
            "post": {
                "tags": [
                    "Other"
                ],
                "summary": "Dislike a Product",
                "operationId": "ccc06cc4f4cfe54550122a1c2bda89a9",
                "parameters": [
                    {
                        "name": "product_id",
                        "in": "query",
                        "description": "ID of the product to be disliked",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully disliked the product",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product disliked successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid product ID"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized access"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/deleteadresses": {
            "delete": {
                "tags": [
                    "Other"
                ],
                "summary": "Delete an address",
                "operationId": "c16b32c23b249ae4f04e593a925b1016",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "ID of the address to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Address successfully deleted"
                    },
                    "404": {
                        "description": "Address not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Address not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/selectaddresses": {
            "post": {
                "tags": [
                    "Other"
                ],
                "summary": "Select an address",
                "operationId": "aa60bcec8bbf00af6ba1f5efb492a5df",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "ID of the address to select",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Address selected successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Address selected successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Address not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Address not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/Role": {
            "get": {
                "tags": [
                    "Admin Role"
                ],
                "summary": "Get Role List",
                "operationId": "677f941bd7e5f58816193a2411f3107e",
                "responses": {
                    "200": {
                        "description": "List of Role resources",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RoleListResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Admin Role"
                ],
                "summary": "Create a new Role",
                "operationId": "44b407d2cc98a7cf48c5178731586c88",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "The name of the role",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "display_name",
                        "in": "query",
                        "description": "The display name for the role",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "permissions",
                        "in": "query",
                        "description": "Array of permission IDs associated with the role",
                        "required": true,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Role created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request: Invalid or missing parameters"
                    },
                    "401": {
                        "description": "Unauthorized: You do not have permission to perform this action"
                    },
                    "500": {
                        "description": "Internal Server Error: Something went wrong on the server"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/Role/{id}": {
            "get": {
                "tags": [
                    "Admin Role"
                ],
                "summary": "Get Role Details",
                "operationId": "b114b486e4bc926879790a72b7409180",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Role",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the specified role",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RoleResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: You do not have permission to access this resource."
                    },
                    "404": {
                        "description": "Not Found: The specified role could not be found."
                    },
                    "500": {
                        "description": "Internal Server Error: Something went wrong on the server."
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Admin Role"
                ],
                "summary": "Update Role",
                "operationId": "5d77e9afb93f3f6d351dc564d72a5f3e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Role",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Name of the role",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "display_name",
                        "in": "query",
                        "description": "Display name of the role",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "permissions",
                        "in": "query",
                        "description": "Array of permission IDs",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role updated successfully"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Admin Role"
                ],
                "summary": "Delete Role",
                "operationId": "fdf6b715cdc2c3defa5d648cb009a135",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show blog ",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Role Deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Admin Role"
                ],
                "summary": "Partially Update Role",
                "operationId": "e7b799369cb66f236d7a47d63529163a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Role",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Name of the role",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "display_name",
                        "in": "query",
                        "description": "Display name of the role",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "permissions",
                        "in": "query",
                        "description": "Array of permission IDs",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role partially updated successfully"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/user": {
            "get": {
                "tags": [
                    "Admin Users"
                ],
                "summary": "Get User List",
                "operationId": "3f60835ebb2934231a8e8f63e0af45a7",
                "responses": {
                    "200": {
                        "description": "List of User resources",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserListResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user": {
            "post": {
                "tags": [
                    "Admin Users"
                ],
                "summary": "Create a new user",
                "operationId": "f2aa988117521168f93651927dff05ce",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "User's full name",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    {
                        "name": "phonenumber",
                        "in": "query",
                        "description": "User's phone number",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    {
                        "name": "meli_code",
                        "in": "query",
                        "description": "User's national ID code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    {
                        "name": "image",
                        "in": "query",
                        "description": "User's profile image in URL or base64 format",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "binary"
                        }
                    },
                    {
                        "name": "cart_number",
                        "in": "query",
                        "description": "User's card number",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    {
                        "name": "home_number",
                        "in": "query",
                        "description": "User's home phone number",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    {
                        "name": "is_superuser",
                        "in": "query",
                        "description": "Specifies if the user is a superuser",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "User's email address",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "email",
                            "maxLength": 255
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User created successfully"
                                        },
                                        "user_id": {
                                            "type": "integer",
                                            "example": 101
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input or missing required fields",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Bad request: Missing required fields"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/user/{id}": {
            "get": {
                "tags": [
                    "Admin Users"
                ],
                "summary": "Retrieve User Information",
                "operationId": "6818da97762697975dfecc19517abbfa",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User information retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProfileResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Admin Users"
                ],
                "summary": "Replace User Information",
                "operationId": "47d8a4de9691a318e853e09647b29b7b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to replace",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "User's name",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    {
                        "name": "phonenumber",
                        "in": "query",
                        "description": "User's phone number",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    {
                        "name": "meli_code",
                        "in": "query",
                        "description": "User's national ID code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    {
                        "name": "image",
                        "in": "query",
                        "description": "Profile image URL or base64 string",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "binary"
                        }
                    },
                    {
                        "name": "cart_number",
                        "in": "query",
                        "description": "User's cart number",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    {
                        "name": "home_number",
                        "in": "query",
                        "description": "User's home phone number",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "User's email address",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "email",
                            "maxLength": 255
                        }
                    },
                    {
                        "name": "is_superuser",
                        "in": "query",
                        "description": "Is the user a superuser?",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": true,
                            "enum": [
                                true,
                                false
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User replaced successfully"
                    },
                    "400": {
                        "description": "Invalid request parameters"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Admin Users"
                ],
                "summary": "Delete User",
                "operationId": "0169512c25bd1abe5b461fa0b9e3683f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid user ID"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Admin Users"
                ],
                "summary": "Update User Information",
                "operationId": "16565c11221d18595667f97bff514fc0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "User's name",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    {
                        "name": "phonenumber",
                        "in": "query",
                        "description": "User's phone number",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    {
                        "name": "meli_code",
                        "in": "query",
                        "description": "User's national ID code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    {
                        "name": "image",
                        "in": "query",
                        "description": "Profile image URL or base64 string",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "binary"
                        }
                    },
                    {
                        "name": "cart_number",
                        "in": "query",
                        "description": "User's cart number",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    {
                        "name": "home_number",
                        "in": "query",
                        "description": "User's home phone number",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "User's email address",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "email",
                            "maxLength": 255
                        }
                    },
                    {
                        "name": "is_superuser",
                        "in": "query",
                        "description": "Is the user a superuser?",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": true,
                            "enum": [
                                true,
                                false
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User updated successfully"
                    },
                    "400": {
                        "description": "Invalid request parameters"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/profile/favorate": {
            "get": {
                "tags": [
                    "profile"
                ],
                "summary": "Get favorite List",
                "operationId": "0920bed00a0a64acabc796dd16c2121f",
                "responses": {
                    "200": {
                        "description": "List of favorite products",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/profile/orders": {
            "get": {
                "tags": [
                    "profile"
                ],
                "summary": "Get orders List",
                "operationId": "c4e663fcfd9022e79d52fe2f02570be0",
                "responses": {
                    "200": {
                        "description": "List of orders resources"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/profile/Adresses": {
            "get": {
                "tags": [
                    "profile"
                ],
                "summary": "Get Adresses List",
                "operationId": "b7f5a0cd7475301d7bccd0c23ad74c57",
                "responses": {
                    "200": {
                        "description": "List of Role resources",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AddressResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/profile/logout": {
            "post": {
                "tags": [
                    "profile"
                ],
                "summary": "Logout",
                "operationId": "689243411481f1c377227f821341fca0",
                "responses": {
                    "200": {
                        "description": "Logout successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logout was successful"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/profile": {
            "get": {
                "tags": [
                    "profile"
                ],
                "summary": "Get user",
                "operationId": "d0df39ab60c47c73dc5bc74ce06b0d0e",
                "responses": {
                    "200": {
                        "description": "List of Role resources",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProfileResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/profile/edit/{id}": {
            "put": {
                "tags": [
                    "profile"
                ],
                "summary": "Update user profile (full)",
                "description": "Fully update the user's profile information",
                "operationId": "a9e82396153bb01da7116bb8e3ec7631",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "User's name",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    {
                        "name": "phonenumber",
                        "in": "query",
                        "description": "User's phone number",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    {
                        "name": "meli_code",
                        "in": "query",
                        "description": "User's national ID code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    {
                        "name": "image",
                        "in": "query",
                        "description": "Profile image URL or base64 string",
                        "required": true,
                        "schema": {
                            "type": "file",
                            "format": "binary"
                        }
                    },
                    {
                        "name": "cart_number",
                        "in": "query",
                        "description": "User's cart number",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    {
                        "name": "birthday",
                        "in": "query",
                        "description": "User's birthday in the format YYYY-MM-DD HH:MM:SS",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}$",
                            "example": "2024-10-25 00:00:00"
                        }
                    },
                    {
                        "name": "home_number",
                        "in": "query",
                        "description": "User's home phone number",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "User's email address",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "email",
                            "maxLength": 255
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Profile updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid parameters provided"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "profile"
                ],
                "summary": "Update user profile (partial)",
                "description": "Partially update the user's profile information",
                "operationId": "2d3efbb6c81980e4b53d741d2dd4eed4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "User's name",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    {
                        "name": "phonenumber",
                        "in": "query",
                        "description": "User's phone number",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    {
                        "name": "birthday",
                        "in": "query",
                        "description": "User's birthday in the format YYYY-MM-DD HH:MM:SS",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}$",
                            "example": "2024-10-25 00:00:00"
                        }
                    },
                    {
                        "name": "meli_code",
                        "in": "query",
                        "description": "User's national ID code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    {
                        "name": "image",
                        "in": "query",
                        "description": "Profile image URL or base64 string",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "binary"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Profile updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid parameters provided"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/Login_step1": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Get Token ",
                "operationId": "79de85a763a5a7789ad877478790eae4",
                "parameters": [
                    {
                        "name": "phonenumber",
                        "in": "query",
                        "description": "User's phone number",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "maxLength": 255
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Role resources"
                    }
                }
            }
        },
        "/Login_step2": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Get Token ",
                "operationId": "81ab9756e8e954e1f96e0581ae322c7f",
                "parameters": [
                    {
                        "name": "code",
                        "in": "query",
                        "description": "User's phone number",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "maxLength": 255
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Role resources"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "403ErrorResponse": {
                "description": "Response for access denied errors",
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "Access denied"
                    }
                },
                "type": "object"
            },
            "AddressResponse": {
                "description": "Response schema for address list",
                "properties": {
                    "data": {
                        "description": "List of addresses",
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "description": "Unique ID of the address",
                                    "type": "integer",
                                    "example": 9
                                },
                                "user_id": {
                                    "description": "ID of the user associated with this address",
                                    "type": "integer",
                                    "example": 26
                                },
                                "ostan": {
                                    "description": "Province of the address",
                                    "type": "string",
                                    "example": "tehran"
                                },
                                "city": {
                                    "description": "City of the address",
                                    "type": "string",
                                    "example": "tehran"
                                },
                                "tahvil": {
                                    "description": "Receiver's name or delivery information",
                                    "type": "string",
                                    "example": "سیبیسب"
                                },
                                "adress": {
                                    "description": "Detailed address",
                                    "type": "string",
                                    "example": "سبیسیب"
                                },
                                "is_selected": {
                                    "description": "Indicates whether the address is selected (1 for selected, 0 for not selected)",
                                    "type": "integer",
                                    "example": 0
                                },
                                "number": {
                                    "description": "Phone number associated with the address",
                                    "type": "integer",
                                    "example": 22265
                                },
                                "post_number": {
                                    "description": "Postal code of the address",
                                    "type": "integer",
                                    "example": 26565
                                },
                                "failed_at": {
                                    "description": "The timestamp when the address became invalid or failed",
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2024-11-21 14:17:09"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "BlogCategoryListResource": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "موبایل"
                    },
                    "parent": {
                        "type": "integer",
                        "example": 0
                    },
                    "updated_at": {
                        "type": "string",
                        "example": "2024-10-05T17:44:12.000000Z"
                    }
                },
                "type": "object"
            },
            "BlogDetailResource": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "بررسی اجمالی آیفون 13: نسل جدید قدرت و نوآوری"
                    },
                    "count_view": {
                        "type": "integer",
                        "example": 25
                    },
                    "content": {
                        "type": "string",
                        "example": "سامسونگ گلکسی S21، یکی از پرچم‌داران قدرتمند سامسونگ، با طراحی زیبا و مشخصات فنی بالا، یکی از بهترین انتخاب‌ها در دنیای گوشی‌های هوشمند به شمار می‌رود. این دستگاه با صفحه‌نمایش **Dynamic AMOLED 2X** و اندازه 6.2 اینچی، تجربه‌ی بصری فوق‌العاده‌ای را برای کاربران فراهم می‌کند. کیفیت رنگ‌ها، کنتراست بالا و نرخ نوسازی 120 هرتز، تجربه کاربری روان و لذت‌بخشی را به همراه دارد.\n\n            چیپست قدرتمند **Exynos 2100** (برای نسخه‌های جهانی) یا **Qualcomm Snapdragon 888** (برای نسخه‌های آمریکا و چین)، سرعت و قدرت فوق‌العاده‌ای برای اجرای برنامه‌ها و بازی‌های سنگین ارائه می‌دهد. با 8 گیگابایت حافظه رم و 128 یا 256 گیگابایت فضای ذخیره‌سازی، گلکسی S21 عملکردی بی‌نقص و سریع دارد. همچنین، این گوشی فاقد درگاه کارت حافظه است، اما فضای ذخیره‌سازی کافی برای اکثر کاربران فراهم می‌کند.\n\n            دوربین‌های سه‌گانه در پشت دستگاه شامل یک لنز 12 مگاپیکسلی فوق عریض، یک لنز 12 مگاپیکسلی عریض، و یک لنز تله‌فوتو 64 مگاپیکسلی است که تجربه‌ای بی‌نظیر از عکاسی و فیلم‌برداری به ارمغان می‌آورد. قابلیت **8K video recording** و **Super Steady** در فیلم‌برداری، باعث می‌شود کاربران بتوانند ویدیوهایی با وضوح بسیار بالا و پایداری بی‌نظیر ضبط کنند.\n\n            **باتری 4000 میلی‌آمپرساعتی** این گوشی با پشتیبانی از شارژ سریع 25 واتی، شارژ بی‌سیم 15 واتی و شارژ بی‌سیم معکوس، امکان استفاده طولانی‌مدت از گوشی بدون نگرانی از تمام شدن باتری را فراهم می‌کند. یکی دیگر از ویژگی‌های برجسته گلکسی S21، پشتیبانی از شبکه 5G است که سرعت بسیار بالایی را در اتصال به اینترنت و دانلود محتوا فراهم می‌کند.\n\n            گلکسی S21 با **استاندارد IP68** در برابر آب و گرد و غبار مقاوم است، به این معنی که در شرایط مختلف محیطی، همچنان عملکرد خود را حفظ می‌کند. سامسونگ همچنین با ارائه تکنولوژی صوتی **Dolby Atmos** و اسپیکرهای استریو، تجربه شنیداری عالی را برای کاربران فراهم کرده است.\n\n            سامسونگ گلکسی S21 از **One UI 3.1**، جدیدترین نسخه رابط کاربری سامسونگ بر پایه اندروید 11 بهره می‌برد که تجربه کاربری ساده، روان و شخصی‌سازی‌شده را به همراه دارد. در مجموع، این گوشی ترکیبی از قدرت، زیبایی و تکنولوژی‌های مدرن است که نیازهای کاربران حرفه‌ای و علاقه‌مندان به دنیای فناوری را به‌خوبی برآورده می‌کند."
                    },
                    "image": {
                        "type": "string",
                        "example": "/storage/files/OIN9JWtZXPg3M9OBnVu7adsaEePPkbN0LVFOOEYgHw.jpg"
                    },
                    "failed_at": {
                        "type": "string",
                        "example": "مهر 10، 1403"
                    }
                },
                "type": "object"
            },
            "BlogListResource": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "بررسی اجمالی آیفون 13: نسل جدید قدرت و نوآوری"
                    },
                    "count_view": {
                        "type": "integer",
                        "example": 25
                    },
                    "content": {
                        "type": "string",
                        "example": "آیفون ۱۳، محصول جدید اپل، با طراحی زیبا و مشخصات فنی بهبود یافته به بازار عرضه شده است. این دستگاه با صفحه‌نمایش Super Retina XDR، تجربه بصری فوق‌العاده‌ای را به کاربران ارائه می‌دهد. چیپست A۱۵ Bionic، که به عنوان قلب تپنده آیفون ۱۳ عمل می‌کند، عملکرد بی‌نظیری را در اجرای برنامه‌ها و بازی‌های سنگین فراهم می‌سازد. دوربین‌های دوتایی ۱۲ مگاپیکسلی در پشت دستگاه با قابلیت‌های عکاسی پیشرفته مانند حالت شب و Smart HDR ۴، عکس‌ها و ویدیوهایی با کیفیت بالا ثبت می‌کنند."
                    },
                    "image": {
                        "type": "string",
                        "example": "/storage/files/OIN9JWtZXPg3M9OBnVu7adsaEePPkbN0LVFOOEYgHw.jpg"
                    },
                    "failed_at": {
                        "type": "string",
                        "example": "مهر 10، 1403"
                    }
                },
                "type": "object"
            },
            "commentListResource": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "content": {
                        "type": "string",
                        "example": "این نظر منه میتونه درست باشه"
                    },
                    "status": {
                        "type": "integer",
                        "example": 0
                    },
                    "user_name": {
                        "type": "string",
                        "example": "Ali"
                    },
                    "updated_at": {
                        "type": "string",
                        "example": "2024-10-05T17:44:12.000000Z"
                    },
                    "first_page_url": {
                        "type": "string",
                        "example": "http://127.0.0.1:8000/api/admin/Comment?page=1"
                    },
                    "from": {
                        "type": "integer",
                        "example": 1
                    },
                    "last_page": {
                        "type": "integer",
                        "example": 1
                    },
                    "last_page_url": {
                        "type": "string",
                        "example": "http://127.0.0.1:8000/api/admin/Comment?page=1"
                    },
                    "links": {
                        "description": "Pagination links",
                        "type": "array",
                        "items": {
                            "properties": {
                                "url": {
                                    "type": "string",
                                    "example": "http://127.0.0.1:8000/api/admin/Comment?page=1",
                                    "nullable": true
                                },
                                "label": {
                                    "type": "string",
                                    "example": "&laquo; Previous"
                                },
                                "active": {
                                    "type": "boolean",
                                    "example": false
                                }
                            },
                            "type": "object"
                        }
                    },
                    "next_page_url": {
                        "type": "string",
                        "example": null,
                        "nullable": true
                    },
                    "path": {
                        "type": "string",
                        "example": "http://127.0.0.1:8000/api/admin/Comment"
                    },
                    "per_page": {
                        "type": "integer",
                        "example": 10
                    },
                    "prev_page_url": {
                        "type": "string",
                        "example": null,
                        "nullable": true
                    },
                    "to": {
                        "type": "integer",
                        "example": 6
                    },
                    "total": {
                        "type": "integer",
                        "example": 6
                    }
                },
                "type": "object"
            },
            "CommentResponse": {
                "description": "Response schema for a successful user update",
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "Comment sent successfully"
                    },
                    "data": {
                        "description": "Details of the updated user",
                        "properties": {
                            "content": {
                                "type": "string",
                                "example": "fesfsefes"
                            },
                            "user_id": {
                                "type": "string",
                                "example": "26"
                            },
                            "commenttable_type": {
                                "type": "string",
                                "example": "App\\\\Models\\\\blog"
                            },
                            "commenttable_id": {
                                "type": "string",
                                "example": "2"
                            },
                            "id": {
                                "type": "integer",
                                "example": 19
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "ProductResponse": {
                "description": "Response schema for product list",
                "properties": {
                    "data": {
                        "description": "List of products",
                        "type": "array",
                        "items": {
                            "properties": {
                                "name": {
                                    "description": "The name of the product",
                                    "type": "string",
                                    "example": "گوشی موبایل سامسونگ مدل Galaxy A21s"
                                },
                                "price": {
                                    "description": "The price of the product",
                                    "type": "integer",
                                    "example": 35000000
                                },
                                "description": {
                                    "description": "Product description",
                                    "type": "string",
                                    "example": null,
                                    "nullable": true
                                },
                                "stars": {
                                    "description": "The star rating of the product",
                                    "type": "integer",
                                    "example": 3
                                },
                                "width": {
                                    "description": "Width of the product",
                                    "type": "integer",
                                    "example": null,
                                    "nullable": true
                                },
                                "length": {
                                    "description": "Length of the product",
                                    "type": "integer",
                                    "example": 17
                                },
                                "discount": {
                                    "description": "Discount percentage",
                                    "type": "integer",
                                    "example": null,
                                    "nullable": true
                                },
                                "count": {
                                    "description": "Available stock count",
                                    "type": "integer",
                                    "example": 10
                                },
                                "count_view": {
                                    "description": "Number of views for the product",
                                    "type": "integer",
                                    "example": 202
                                },
                                "image": {
                                    "type": "array",
                                    "items": {
                                        "description": "Path to the image",
                                        "type": "string",
                                        "example": "/storage/photos/1/p103.png"
                                    }
                                },
                                "brand": {
                                    "description": "The brand of the product, null if not available",
                                    "type": "string",
                                    "example": null
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "ContactPagination": {
                "description": "Paginated list of contacts",
                "properties": {
                    "current_page": {
                        "description": "The current page number",
                        "type": "integer"
                    },
                    "data": {
                        "description": "List of contact records",
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "description": "The unique ID of the contact",
                                    "type": "integer"
                                },
                                "name": {
                                    "description": "The name of the contact",
                                    "type": "string"
                                },
                                "number_phone": {
                                    "description": "The phone number of the contact",
                                    "type": "string"
                                },
                                "content": {
                                    "description": "The content of the contact message",
                                    "type": "string"
                                },
                                "email": {
                                    "description": "The email address of the contact",
                                    "type": "string",
                                    "format": "email"
                                },
                                "subject": {
                                    "description": "The subject of the contact message",
                                    "type": "string"
                                },
                                "failed_at": {
                                    "description": "The failure date and time",
                                    "type": "string",
                                    "format": "date-time"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "first_page_url": {
                        "description": "URL to the first page",
                        "type": "string",
                        "format": "url"
                    },
                    "from": {
                        "description": "The starting index of records on the current page",
                        "type": "integer"
                    },
                    "last_page": {
                        "description": "The last page number",
                        "type": "integer"
                    },
                    "last_page_url": {
                        "description": "URL to the last page",
                        "type": "string",
                        "format": "url"
                    },
                    "links": {
                        "description": "Pagination navigation links",
                        "type": "array",
                        "items": {
                            "properties": {
                                "url": {
                                    "description": "URL of the pagination link",
                                    "type": "string",
                                    "format": "url",
                                    "nullable": true
                                },
                                "label": {
                                    "description": "Label for the pagination link",
                                    "type": "string"
                                },
                                "active": {
                                    "description": "Whether the link is active or not",
                                    "type": "boolean"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "next_page_url": {
                        "description": "URL to the next page, if available",
                        "type": "string",
                        "format": "url",
                        "nullable": true
                    },
                    "path": {
                        "description": "Base path for the API endpoint",
                        "type": "string",
                        "format": "url"
                    },
                    "per_page": {
                        "description": "Number of records per page",
                        "type": "integer"
                    },
                    "prev_page_url": {
                        "description": "URL to the previous page, if available",
                        "type": "string",
                        "format": "url",
                        "nullable": true
                    },
                    "to": {
                        "description": "The ending index of records on the current page",
                        "type": "integer"
                    },
                    "total": {
                        "description": "Total number of records",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Contact": {
                "title": "Contact",
                "description": "Schema for a single contact record",
                "properties": {
                    "id": {
                        "description": "The ID of the contact",
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "description": "The name of the contact",
                        "type": "string",
                        "example": "محمد جواد سردار آبادی"
                    },
                    "number_phone": {
                        "description": "The phone number of the contact",
                        "type": "integer",
                        "example": 9209293499
                    },
                    "content": {
                        "description": "The content of the contact message",
                        "type": "string",
                        "example": "سایت خوبی داری"
                    },
                    "email": {
                        "description": "The email address of the contact",
                        "type": "string",
                        "format": "email",
                        "example": "ef@email.com"
                    },
                    "subject": {
                        "description": "The subject of the contact message",
                        "type": "string",
                        "example": "پیشنهاد"
                    },
                    "failed_at": {
                        "description": "The date and time when the contact failed",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-10-26 15:02:23"
                    }
                },
                "type": "object"
            },
            "ContactList": {
                "title": "Contact List",
                "description": "A list of contacts",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Contact"
                        }
                    }
                },
                "type": "object"
            },
            "ProfileResponse": {
                "description": "Response schema for profile details",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 26
                                },
                                "name": {
                                    "type": "string",
                                    "example": "Admin"
                                },
                                "home_number": {
                                    "type": "integer",
                                    "example": 56266
                                },
                                "cart_number": {
                                    "type": "integer",
                                    "example": 2652561
                                },
                                "birthday": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2005-11-23 00:00:00"
                                },
                                "email": {
                                    "type": "string",
                                    "format": "email",
                                    "example": "jww@email.com"
                                },
                                "phonenumber": {
                                    "type": "integer",
                                    "example": 9209293499
                                },
                                "meli_code": {
                                    "type": "integer",
                                    "example": 2211241
                                },
                                "image": {
                                    "type": "string",
                                    "example": "ProfilePhoto/CScWcYdpROEVjNMrHkHbSyJIdpOUZB2n19PVlV9Y.jpg"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "UserListResource": {
                "title": "User List Resource",
                "description": "Schema for paginated list of users",
                "properties": {
                    "current_page": {
                        "description": "The current page number",
                        "type": "integer",
                        "example": 1
                    },
                    "data": {
                        "description": "List of user records",
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "description": "User ID",
                                    "type": "integer",
                                    "example": 1
                                },
                                "name": {
                                    "description": "Name of the user",
                                    "type": "string",
                                    "example": "Admin"
                                },
                                "email": {
                                    "description": "Email address of the user",
                                    "type": "string",
                                    "format": "email",
                                    "example": "jww@email.com"
                                },
                                "phonenumber": {
                                    "description": "Phone number of the user",
                                    "type": "integer",
                                    "example": 9209293499
                                },
                                "image": {
                                    "description": "Profile photo path",
                                    "type": "string",
                                    "example": "ProfilePhoto/CScWcYdpROEVjNMrHkHbSyJIdpOUZB2n19PVlV9Y.jpg"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "first_page_url": {
                        "description": "URL to the first page",
                        "type": "string",
                        "format": "url",
                        "example": "http://api.example.com/users?page=1"
                    },
                    "from": {
                        "description": "The starting index of records on the current page",
                        "type": "integer",
                        "example": 1
                    },
                    "last_page": {
                        "description": "The last page number",
                        "type": "integer",
                        "example": 10
                    },
                    "last_page_url": {
                        "description": "URL to the last page",
                        "type": "string",
                        "format": "url",
                        "example": "http://api.example.com/users?page=10"
                    },
                    "links": {
                        "description": "Pagination navigation links",
                        "type": "array",
                        "items": {
                            "properties": {
                                "url": {
                                    "description": "URL of the pagination link",
                                    "type": "string",
                                    "format": "url",
                                    "example": "http://api.example.com/users?page=2",
                                    "nullable": true
                                },
                                "label": {
                                    "description": "Label for the pagination link",
                                    "type": "string",
                                    "example": "Next"
                                },
                                "active": {
                                    "description": "Whether the link is active or not",
                                    "type": "boolean",
                                    "example": true
                                }
                            },
                            "type": "object"
                        }
                    },
                    "next_page_url": {
                        "description": "URL to the next page, if available",
                        "type": "string",
                        "format": "url",
                        "example": "http://api.example.com/users?page=2",
                        "nullable": true
                    },
                    "path": {
                        "description": "Base path for the API endpoint",
                        "type": "string",
                        "format": "url",
                        "example": "http://api.example.com/users"
                    },
                    "per_page": {
                        "description": "Number of records per page",
                        "type": "integer",
                        "example": 15
                    },
                    "prev_page_url": {
                        "description": "URL to the previous page, if available",
                        "type": "string",
                        "format": "url",
                        "example": null,
                        "nullable": true
                    },
                    "to": {
                        "description": "The ending index of records on the current page",
                        "type": "integer",
                        "example": 15
                    },
                    "total": {
                        "description": "Total number of records",
                        "type": "integer",
                        "example": 150
                    }
                },
                "type": "object"
            },
            "ProductDetailResourcee": {
                "title": "Product List Resource",
                "description": "Schema for a single product in the list",
                "properties": {
                    "current_page": {
                        "description": "The current page number",
                        "type": "integer"
                    },
                    "data": {
                        "description": "List of contact records",
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "description": "Product ID",
                                    "type": "integer",
                                    "example": 1
                                },
                                "name": {
                                    "description": "Product name",
                                    "type": "string",
                                    "example": "گوشی موبایل شیائومی مدل POCO X3 M2007J20CG دو سیم‌ کارت"
                                },
                                "price": {
                                    "description": "Price of the product",
                                    "type": "integer",
                                    "example": 11000000
                                },
                                "stars": {
                                    "description": "Star rating of the product",
                                    "type": "integer",
                                    "example": 3,
                                    "nullable": true
                                },
                                "brand": {
                                    "description": "The brand of the product, null if not available",
                                    "type": "string",
                                    "example": null
                                },
                                "image": {
                                    "description": "Path to the image",
                                    "type": "string",
                                    "example": "/storage/photos/1/p103.png"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "first_page_url": {
                        "description": "URL to the first page",
                        "type": "string",
                        "format": "url"
                    },
                    "from": {
                        "description": "The starting index of records on the current page",
                        "type": "integer"
                    },
                    "last_page": {
                        "description": "The last page number",
                        "type": "integer"
                    },
                    "last_page_url": {
                        "description": "URL to the last page",
                        "type": "string",
                        "format": "url"
                    },
                    "links": {
                        "description": "Pagination navigation links",
                        "type": "array",
                        "items": {
                            "properties": {
                                "url": {
                                    "description": "URL of the pagination link",
                                    "type": "string",
                                    "format": "url",
                                    "nullable": true
                                },
                                "label": {
                                    "description": "Label for the pagination link",
                                    "type": "string"
                                },
                                "active": {
                                    "description": "Whether the link is active or not",
                                    "type": "boolean"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "next_page_url": {
                        "description": "URL to the next page, if available",
                        "type": "string",
                        "format": "url",
                        "nullable": true
                    },
                    "path": {
                        "description": "Base path for the API endpoint",
                        "type": "string",
                        "format": "url"
                    },
                    "per_page": {
                        "description": "Number of records per page",
                        "type": "integer"
                    },
                    "prev_page_url": {
                        "description": "URL to the previous page, if available",
                        "type": "string",
                        "format": "url",
                        "nullable": true
                    },
                    "to": {
                        "description": "The ending index of records on the current page",
                        "type": "integer"
                    },
                    "total": {
                        "description": "Total number of records",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ProductResponsece": {
                "description": "Response schema for product details",
                "properties": {
                    "data": {
                        "description": "List of products",
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "description": "Unique ID of the product",
                                    "type": "integer",
                                    "example": 1
                                },
                                "name": {
                                    "description": "Name of the product",
                                    "type": "string",
                                    "example": "گوشی موبایل سامسونگ مدل Galaxy A12"
                                },
                                "price": {
                                    "description": "Price of the product in Rials",
                                    "type": "integer",
                                    "example": 10000000
                                },
                                "count": {
                                    "description": "Stock count of the product",
                                    "type": "integer",
                                    "example": 5
                                },
                                "count_view": {
                                    "description": "Number of views for the product",
                                    "type": "integer",
                                    "example": 66
                                },
                                "stars": {
                                    "description": "Rating of the product (1 to 5)",
                                    "type": "integer",
                                    "example": 3
                                },
                                "discount_percent": {
                                    "description": "Discount percentage on the product",
                                    "type": "integer",
                                    "example": 10
                                },
                                "garant": {
                                    "description": "Warranty details of the product",
                                    "type": "string",
                                    "example": "12 ماهه گارانتی"
                                },
                                "Special_sale": {
                                    "description": "Indicates if the product is on special sale (1 for yes, 0 for no)",
                                    "type": "integer",
                                    "example": 1
                                },
                                "description": {
                                    "description": "Detailed description of the product",
                                    "type": "string",
                                    "example": "گوشی موبایل سامسونگ Galaxy A12 دارای طراحی زیبا و باتری قوی است."
                                },
                                "Brand": {
                                    "description": "Brand of the product",
                                    "type": "string",
                                    "example": "سامسونگ"
                                },
                                "failed_at": {
                                    "description": "The timestamp when the product became unavailable",
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2024-11-21 14:17:09"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "ProductDetailResource": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "RoleListResponse": {
                "description": "Paginated list of roles",
                "properties": {
                    "data": {
                        "properties": {
                            "current_page": {
                                "type": "integer",
                                "example": 1
                            },
                            "data": {
                                "type": "array",
                                "items": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Admin"
                                        },
                                        "display_name": {
                                            "type": "string",
                                            "example": "Admin Site"
                                        },
                                        "deleted_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2024-10-25 16:49:08"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2024-10-24T21:55:14.000000Z"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2024-10-25T16:49:08.000000Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "first_page_url": {
                                "type": "string",
                                "format": "url",
                                "example": "http://127.0.0.1:8000/api/admin/Role?page=1"
                            },
                            "from": {
                                "type": "integer",
                                "example": 1
                            },
                            "last_page": {
                                "type": "integer",
                                "example": 1
                            },
                            "last_page_url": {
                                "type": "string",
                                "format": "url",
                                "example": "http://127.0.0.1:8000/api/admin/Role?page=1"
                            },
                            "links": {
                                "type": "array",
                                "items": {
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        },
                                        "label": {
                                            "type": "string",
                                            "example": "&laquo; Previous"
                                        },
                                        "active": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "next_page_url": {
                                "type": "string",
                                "example": null,
                                "nullable": true
                            },
                            "path": {
                                "type": "string",
                                "format": "url",
                                "example": "http://127.0.0.1:8000/api/admin/Role"
                            },
                            "per_page": {
                                "type": "integer",
                                "example": 10
                            },
                            "prev_page_url": {
                                "type": "string",
                                "example": null,
                                "nullable": true
                            },
                            "to": {
                                "type": "integer",
                                "example": 6
                            },
                            "total": {
                                "type": "integer",
                                "example": 6
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "RoleResource": {
                "title": "Role Resource",
                "description": "Schema for a single role resource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 2
                    },
                    "name": {
                        "type": "string",
                        "example": "d"
                    },
                    "display_name": {
                        "type": "string",
                        "example": "d"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-10-24T21:55:14.000000Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-10-24T21:55:17.000000Z"
                    }
                },
                "type": "object"
            },
            "PermissionItem": {
                "title": "Permission Item",
                "description": "An individual permission item",
                "properties": {
                    "id": {
                        "description": "The ID of the permission",
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "description": "The name of the permission",
                        "type": "string",
                        "example": "Store_Update"
                    },
                    "display_name": {
                        "description": "The display name of the permission",
                        "type": "string",
                        "example": "Store_Update of Object Models"
                    },
                    "created_at": {
                        "description": "The creation timestamp of the permission",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-10-24T19:16:55.000000Z",
                        "nullable": true
                    },
                    "updated_at": {
                        "description": "The update timestamp of the permission",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-10-24T19:16:55.000000Z",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "PermissionList": {
                "title": "Permission List",
                "description": "Paginated list of permissions",
                "properties": {
                    "current_page": {
                        "description": "The current page number",
                        "type": "integer",
                        "example": 1
                    },
                    "data": {
                        "description": "The list of permissions",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PermissionItem"
                        }
                    },
                    "first_page_url": {
                        "description": "The URL of the first page",
                        "type": "string",
                        "format": "url",
                        "example": "http://127.0.0.1:8000/api/admin/permission?page=1"
                    },
                    "from": {
                        "description": "The starting item number on this page",
                        "type": "integer",
                        "example": 1
                    },
                    "last_page": {
                        "description": "The last page number",
                        "type": "integer",
                        "example": 1
                    },
                    "last_page_url": {
                        "description": "The URL of the last page",
                        "type": "string",
                        "format": "url",
                        "example": "http://127.0.0.1:8000/api/admin/permission?page=1"
                    },
                    "links": {
                        "description": "Pagination links",
                        "type": "array",
                        "items": {
                            "properties": {
                                "url": {
                                    "description": "The URL for the page",
                                    "type": "string",
                                    "format": "url",
                                    "example": "http://127.0.0.1:8000/api/admin/permission?page=1",
                                    "nullable": true
                                },
                                "label": {
                                    "description": "The label of the page link",
                                    "type": "string",
                                    "example": "&laquo; Previous"
                                },
                                "active": {
                                    "description": "Indicates if the link is active",
                                    "type": "boolean",
                                    "example": false
                                }
                            },
                            "type": "object"
                        }
                    },
                    "next_page_url": {
                        "description": "The URL of the next page",
                        "type": "string",
                        "format": "url",
                        "example": null,
                        "nullable": true
                    },
                    "path": {
                        "description": "The base URL path",
                        "type": "string",
                        "format": "url",
                        "example": "http://127.0.0.1:8000/api/admin/permission"
                    },
                    "per_page": {
                        "description": "The number of items per page",
                        "type": "integer",
                        "example": 10
                    },
                    "prev_page_url": {
                        "description": "The URL of the previous page",
                        "type": "string",
                        "format": "url",
                        "example": null,
                        "nullable": true
                    },
                    "to": {
                        "description": "The ending item number on this page",
                        "type": "integer",
                        "example": 3
                    },
                    "total": {
                        "description": "The total number of items",
                        "type": "integer",
                        "example": 3
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "sanctum": {
                "type": "apiKey",
                "description": "Enter token in format (Bearer <token>)",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "tags": [
        {
            "name": "Admin Blog",
            "description": "APIs for managing blogs in admin panel"
        },
        {
            "name": "Admin Users",
            "description": "APIs for managing users in admin panel"
        },
        {
            "name": "Admin BlogCategory",
            "description": "APIs for managing blog categories in admin panel"
        },
        {
            "name": "Admin ProductCategory",
            "description": "APIs for managing product categories in admin panel"
        },
        {
            "name": "Admin Comment",
            "description": "APIs for managing comments in admin panel"
        },
        {
            "name": "Admin Role",
            "description": "APIs for managing roles in admin panel"
        },
        {
            "name": "Admin Permission",
            "description": "APIs for managing permissions in admin panel"
        },
        {
            "name": "Cart",
            "description": "APIs for Cart"
        },
        {
            "name": "Admin Product",
            "description": "APIs for managing permissions in admin panel"
        },
        {
            "name": "Contact",
            "description": "APIs for managing Contact in admin panel"
        },
        {
            "name": "profile",
            "description": "APIs for managing  profile"
        },
        {
            "name": "Other",
            "description": "APIs for managing"
        },
        {
            "name": "Auth",
            "description": "APIs for user authentication"
        }
    ]
}